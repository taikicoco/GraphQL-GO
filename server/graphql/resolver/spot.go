package resolver

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.32

import (
	"context"
	"server/graphql/generated/model"
)

// Spots is the resolver for the spots field.
func (r *queryResolver) Spots(ctx context.Context) ([]*model.Spot, error) {
	res, err := r.spot.GetSpots(ctx)
	if err != nil {
		return nil, err
	}

	spots := make([]*model.Spot, len(res))
	for i, v := range res {
		spots[i] = &model.Spot{
			SpotID:      v.SpotID,
			Name:        v.Name,
			RealImgURL:  &v.RealImgURL,
			AnimeImgURL: &v.AnimeImgURL,
			Address:     &v.Address,
		}
	}

	return spots, nil
}

// Spot is the resolver for the spot field.
func (r *queryResolver) Spot(ctx context.Context, spotID int) (*model.Spot, error) {
	res, err := r.spot.GetSpotByID(ctx, spotID)
	if err != nil {
		return nil, err
	}

	spot := &model.Spot{
		SpotID:      res.SpotID,
		Name:        res.Name,
		RealImgURL:  &res.RealImgURL,
		AnimeImgURL: &res.AnimeImgURL,
		Address:     &res.Address,
	}

	return spot, nil
}
