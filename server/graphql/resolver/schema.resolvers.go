package resolver

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.32

import (
	"context"
	"fmt"
	"server/graphql/generated"
	"server/graphql/generated/model"
)

// AnimeList is the resolver for the animeList field.
func (r *queryResolver) AnimeList(ctx context.Context) ([]*model.Anime, error) {
	animes := []*model.Anime{
		{
			AnimeID: 1,
			Name:    "anime1",
		},
		{
			AnimeID: 2,
			Name:    "anime2",
		},
	}
	return animes, nil
}

// AnimeListByAnimeID is the resolver for the animeListByAnimeId field.
func (r *queryResolver) AnimeListByAnimeID(ctx context.Context, animeID []*int) ([]*model.Anime, error) {
	panic(fmt.Errorf("not implemented: AnimeListByAnimeID - animeListByAnimeId"))
}

// GuideListByAnimeIDAndAreaID is the resolver for the GuideListByAnimeIdAndAreaId field.
func (r *queryResolver) GuideListByAnimeIDAndAreaID(ctx context.Context, areaID []*int, animeID []*int) ([]*model.Guide, error) {
	panic(fmt.Errorf("not implemented: GuideListByAnimeIDAndAreaID - GuideListByAnimeIdAndAreaId"))
}

// Query returns generated.QueryResolver implementation.
func (r *Resolver) Query() generated.QueryResolver { return &queryResolver{r} }

type queryResolver struct{ *Resolver }
