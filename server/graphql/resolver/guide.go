package resolver

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.32

import (
	"context"
	"fmt"
	"server/graphql/generated"
	"server/graphql/generated/model"
)

// Gender is the resolver for the gender field.
func (r *guideResolver) Gender(ctx context.Context, obj *model.Guide) (*model.Gender, error) {
	panic(fmt.Errorf("not implemented: Gender - gender"))
}

// Country is the resolver for the country field.
func (r *guideResolver) Country(ctx context.Context, obj *model.Guide) (*model.Country, error) {
	panic(fmt.Errorf("not implemented: Country - country"))
}

// Guides is the resolver for the guides field.
func (r *queryResolver) Guides(ctx context.Context) ([]*model.Guide, error) {
	panic(fmt.Errorf("not implemented: Guides - guides"))
}

// Guide is the resolver for the guide field.
func (r *queryResolver) Guide(ctx context.Context, guideID int) (*model.Guide, error) {
	panic(fmt.Errorf("not implemented: Guide - guide"))
}

// Guide returns generated.GuideResolver implementation.
func (r *Resolver) Guide() generated.GuideResolver { return &guideResolver{r} }

type guideResolver struct{ *Resolver }
