package resolver

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.32

import (
	"context"
	"server/graphql/generated/model"
)

// Countries is the resolver for the countries field.
func (r *queryResolver) Countries(ctx context.Context) ([]*model.Country, error) {
	res, err := r.country.CountryList(ctx)
	if err != nil {
		return nil, err
	}

	countries := make([]*model.Country, len(res))
	for i, v := range res {
		countries[i] = &model.Country{
			CountryID: v.CountryID,
			Name:      v.Name,
			ImgURL:    &v.ImgURL,
		}
	}

	return countries, nil
}

// Country is the resolver for the country field.
func (r *queryResolver) Country(ctx context.Context, countryID int) (*model.Country, error) {
	res, err := r.country.GetCountryByID(ctx, countryID)
	if err != nil {
		return nil, err
	}

	country := &model.Country{
		CountryID: res.CountryID,
		Name:      res.Name,
		ImgURL:    &res.ImgURL,
	}

	return country, nil

}
